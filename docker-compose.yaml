version: '3'

services:
  ### REST API DATABASE
  db:
    container_name: postgresdb
    image: postgres:latest
    restart: always
    env_file:
      - project.env
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  ### REST API
  api:
    container_name: django
    build: AwesomeTimelapseREST
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - project.env
    ports:
      - 8000:8000
    depends_on:
      - db
    volumes:
      - upload-data:/code/upload/

  ### FRONTEND
  frontend:
    container_name: nodejs
    build: AwesomeTimelapseFrontend
    ports:
      - 8080:8080
    depends_on:
      - rabbitmq
      - api
    links:
      - "rabbitmq:queue"
    env_file:
      - project.env

  ### QUEUE
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 5672:5672
    environment: 
      RABBITMQ_ERLANG_COOKIE: "very-very-secret-cookie"

  ### BACKEND WORKER
  worker:
    container_name: videoBuilderWorker
    build: AwesomeTimelapseBackend
    command: python vb_worker.py
    env_file:
      - project.env
    depends_on:
      - rabbitmq
      - api
    links:
      - "rabbitmq:queue"


volumes:
  upload-data:
  postgres-data:
